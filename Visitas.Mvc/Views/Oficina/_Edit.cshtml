@model Visitas.Models.Oficinas

<center>
<h2 class="marron">Editar</h2>
</center>

                      @*(Acion , el controlador donde se ubica el action que llamaremos)*@
@using (Ajax.BeginForm("Edit", new { Controller = "Oficina" },
    new AjaxOptions
    {
        HttpMethod = "POST", //Indicamos el tipo del metodo, sea POST O GET
        InsertionMode = InsertionMode.Replace, // En caso exista, insercion de codigo HTML
        UpdateTargetId = "modal-body", //Este modal-body, esta dentro de la estructura del modal que hemos creado
        OnSuccess = "oficina.success('edit')" //En el caso de existó, llamaremos a esa funcion de Javascript
    },
    htmlAttributes: new { id = "editForm" })
    )
{
    @Html.AntiForgeryToken()
<center>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Sede, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sede, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sede, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Co_Oficina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Co_Oficina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Co_Oficina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.No_Oficina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.No_Oficina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.No_Oficina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.De_Oficina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.De_Oficina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.De_Oficina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jefe_Oficina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Jefe_Oficina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Jefe_Oficina, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</center>
    }

    <script type="text/javascript">
        $(function () {
            $.validator.unobtrusive.parse("#editForm");
        })
    </script>

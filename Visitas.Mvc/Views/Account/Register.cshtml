@model Visitas.Mvc.Models.RegisterUserViewModel

@{
    ViewBag.Title = "Registrarse";
}

    <h2 class="blue">Registrarse</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <center>
        <div class="form-horizontal login" id="contenedorprin2">
            <h4 class="marron">Ingrese sus datos</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-offset-3 col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Roles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-5 col-md-3">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </center>
}
<center>
    <div>
        @Html.ActionLink("Regresar", "Index", "Home")
    </div>
</center>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type='text/javascript'></script>
<script>
    $('#contenedorprin2').on('mouseenter', ponercolor);
    $('#contenedorprin2').on('mouseleave', quitarcolor);

    function ponercolor() {
        $('#contenedorprin2').addClass('fondowhitesmoke');
    }
    function quitarcolor() {
        $('#contenedorprin2').removeClass('fondowhitesmoke');
    }
</script>
@model Visitas.Models.CargosLaborales

<center>
    <h2 class="marron">Creación</h2>
</center>

                    @*(Acion , el controlador donde se ubica el action que llamaremos)*@
@using (Ajax.BeginForm("Create", new { Controller = "CargoLaboral"},
        new AjaxOptions
        {
            HttpMethod = "POST", //Indicamos el tipo del metodo, sea POST O GET
            InsertionMode = InsertionMode.Replace, // En caso exista, insercion de codigo HTML
            UpdateTargetId = "modal-body", //Este modal-body, esta dentro de la estructura del modal que hemos creado
            OnSuccess = "cargolaboral.success('create')" //En el caso de existó, llamaremos a esa funcion de Javascript
        },
        htmlAttributes: new { id = "createForm" } /*indicamos todos los atributos que puede tener*/)
        )
{
    @Html.AntiForgeryToken()
    <center>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Co_Cargo_Laboral, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Co_Cargo_Laboral, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Co_Cargo_Laboral, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.No_Cargo_Laboral, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.No_Cargo_Laboral, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.No_Cargo_Laboral, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.De_Cargo_Laboral, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.De_Cargo_Laboral, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.De_Cargo_Laboral, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    </center>
}

<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse("#createForm");//(dentro del parentesis va el id que hemos colocado al inicio)
    });

    cargolaboral.closeModal = function () {
        //Cuando salgo del modal sin guardar, abajo hacemos que se libere el modal
        @*if (!cargolaboral.recordInUse)
            cargolaboral.removeCargolaboral("@Model.Id");*@
    }
</script>

